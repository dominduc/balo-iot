
// ====== Bi·∫øn to√†n c·ª•c ======
let reminders = JSON.parse(localStorage.getItem('reminders')) || [];
let pendingReminder = null;

// ====== H√†m l∆∞u v√† hi·ªÉn th·ªã ======
function saveReminders() {
  localStorage.setItem('reminders', JSON.stringify(reminders));
}

function appendChatMessage(sender, text) {
  const box = document.getElementById("chat-box");
  const div = document.createElement("div");
  div.innerHTML = `<b>${sender}:</b> ${text}`;
  box.appendChild(div);
  box.scrollTop = box.scrollHeight;
}

// ====== H√†m ph√¢n t√≠ch c√¢u l·ªánh nh·∫Øc nh·ªü ======
function parseReminderCommand(text) {
  const regex = /nh·∫Øc t√¥i\s(.+?)(?:\s+l√∫c\s+)?(\d{1,2})[:h](\d{1,2})/i;
  const match = text.toLowerCase().trim().match(regex);

  if (match) {
    const message = match[1].trim();
    const hour = match[2].padStart(2, '0');
    const minute = match[3].padStart(2, '0');
    const time = `${hour}:${minute}`;
    return { message, time };
  }
  return null;
}

// ====== X·ª≠ l√Ω tin nh·∫Øn nh·∫Øc nh·ªü ======
function handleReminderInput(text) {
  // Tr·∫£ l·ªùi x√°c nh·∫≠n
  if (pendingReminder) {
    if (["c√≥", "yes"].includes(text.toLowerCase())) {
      reminders.push({ ...pendingReminder, notified: false });
      saveReminders();
      appendChatMessage("ü§ñ Chatbot", `‚úÖ ƒê√£ l∆∞u l·ªùi nh·∫Øc: "${pendingReminder.message}" l√∫c ${pendingReminder.time}`);
    } else {
      appendChatMessage("ü§ñ Chatbot", `‚ùå ƒê√£ h·ªßy l·ªùi nh·∫Øc.`);
    }
    pendingReminder = null;
    return true;
  }

  // Ph√¢n t√≠ch c√∫ ph√°p nh·∫Øc nh·ªü
  const parsed = parseReminderCommand(text);
  if (parsed) {
    pendingReminder = parsed;
    appendChatMessage("ü§ñ Chatbot", `üìå B·∫°n c√≥ mu·ªën t·∫°o l·ªùi nh·∫Øc: "${parsed.message}" l√∫c ${parsed.time}? (Tr·∫£ l·ªùi: c√≥ / kh√¥ng)`);
    return true;
  }

  return false; // Kh√¥ng ph·∫£i nh·∫Øc nh·ªü
}

// ====== ƒê·ªìng h·ªì ki·ªÉm tra l·ªùi nh·∫Øc m·ªói ph√∫t ======
setInterval(() => {
  const now = new Date();
  const hour = now.getHours().toString().padStart(2, '0');
  const minute = now.getMinutes().toString().padStart(2, '0');
  const currentTime = `${hour}:${minute}`;

  reminders.forEach((reminder, i) => {
    if (!reminder.notified && reminder.time === currentTime) {
      appendChatMessage("‚è∞ Nh·∫Øc nh·ªü", `ƒê·∫øn gi·ªù r·ªìi! B·∫°n c·∫ßn: ${reminder.message}`);
      reminders[i].notified = true;
      saveReminders();
    }
  });
}, 1000);